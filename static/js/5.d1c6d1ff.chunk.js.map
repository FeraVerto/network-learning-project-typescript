{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.sass","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","DialogsItem","id","avatar","name","lastMessage","className","s","link","item","Avatar","alt","src","message","user_name","last_message","newData","dialogs","map","d","list","dialogsPage","Dialogs"],"mappings":"2LASMA,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAoBC,GAQhC,OAFiCC,YAAQN,EAARM,EALP,SAACC,GACMA,EAAxBL,OADgD,IACrCM,EADoC,YACvBD,EADuB,YAEpD,OAAKA,EAAML,OACJ,cAACG,EAAD,eAAeG,IADI,cAAC,IAAD,CAAUC,GAAI,gB,oBCjBhDC,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,yBAAyB,UAAY,2BAA2B,aAAe,gC,6FCMxJC,EAAyC,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACtE,OACI,cAAC,IAAD,CAASC,UAAWC,IAAEC,KAAMV,GAAI,aAAeI,EAA/C,SACI,qBAAII,UAAWC,IAAEE,KAAjB,UACI,cAACC,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAKT,IAC9B,sBAAKG,UAAWC,IAAEM,QAAlB,UACI,qBAAKP,UAAWC,IAAEO,UAAlB,SAA8BV,IAC9B,qBAAKE,UAAWC,IAAEQ,aAAlB,SAAiCV,a,SCStCZ,eAZwB,SAACG,GAEpC,IAAIoB,EAAUpB,EAAMqB,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAwBjB,GAAIiB,EAAEjB,GAAIE,KAAMe,EAAEf,KAAMC,YAAac,EAAEd,YAClDF,OAAQgB,EAAEhB,QADLgB,EAAEjB,OAGzD,OACI,oBAAII,UAAWC,IAAEa,KAAjB,SACKJ,O,QCAErB,uBAPS,SAACL,GACrB,MAAO,CACH2B,QAAS3B,EAAM+B,YAAYJ,QAC3B1B,OAAQD,EAAME,KAAKD,UAI0D,KAAtEI,CAA4E2B","file":"static/js/5.d1c6d1ff.chunk.js","sourcesContent":["import React, {ComponentType} from \"react\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\ntype MapStatePropsType = {\n    isAuth: boolean | null\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent = (props: MapStatePropsType) => {\n        let {isAuth, ...restProps} = props\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>\n        return <Component {...restProps as T}/>\n    }\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n    return ConnectedRedirectComponent\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Dialogs_list__2o-TF\",\"item\":\"Dialogs_item__1Rw8z\",\"message\":\"Dialogs_message__1qS-S\",\"user_name\":\"Dialogs_user_name__O0yS3\",\"last_message\":\"Dialogs_last_message__AnAp_\"};","import {NavLink} from \"react-router-dom\";\nimport s from \"../Dialogs.module.sass\";\nimport React from \"react\";\nimport {Avatar} from \"@material-ui/core\";\nimport {DialogsItemType} from \"../../../types/types\";\n\n\nexport const DialogsItem: React.FC<DialogsItemType> = ({id, avatar, name, lastMessage}) => {\n    return (\n        <NavLink className={s.link} to={\"/messages/\" + id}>\n            <li className={s.item}>\n                <Avatar alt=\"Remy Sharp\" src={avatar}/>\n                <div className={s.message}>\n                    <div className={s.user_name}>{name}</div>\n                    <div className={s.last_message}>{lastMessage}</div>\n                </div>\n            </li>\n        </NavLink>\n    )\n}\n\n\n\n","import React from \"react\";\nimport s from \"./Dialogs.module.sass\";\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {DialogsItemType} from \"../../types/types\";\n\ntype DialogsType = {\n    dialogs: Array<DialogsItemType>\n    isAuth: boolean | null\n}\n\nconst Dialogs: React.FC<DialogsType> = (props) => {\n\n    let newData = props.dialogs.map(d => <DialogsItem key={d.id} id={d.id} name={d.name} lastMessage={d.lastMessage}\n                                                      avatar={d.avatar}/>)\n\n    return (\n        <ul className={s.list}>\n            {newData}\n        </ul>\n    )\n}\n\nexport default withAuthRedirect(Dialogs);\n\n","import React from \"react\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {DialogsItemType} from \"../../types/types\";\n\ntype mapStateToPropsType = {\n    dialogs: Array<DialogsItemType>\n    isAuth: boolean | null\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default connect<mapStateToPropsType, null, {}, AppStateType>(mapStateToProps, null)(Dialogs)\n"],"sourceRoot":""}