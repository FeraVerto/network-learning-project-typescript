{"version":3,"sources":["../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.sass","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["SvgIcon","React","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$fontSize","fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","focusable","undefined","role","muiName","withStyles","theme","userSelect","width","height","display","fill","flexShrink","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","name","createSvgIcon","path","displayName","createElement","memo","forwardRef","mapStateToProps","state","isAuth","auth","withAuthRedirect","connect","restProps","to","module","exports","d","Avatar","alt","childrenProp","imgProps","sizes","src","srcSet","_props$variant","variant","loaded","_ref","_React$useState","setLoaded","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","position","alignItems","justifyContent","fontFamily","lineHeight","borderRadius","overflow","background","default","backgroundColor","type","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","DialogsItem","id","avatar","lastMessage","s","link","item","message","user_name","last_message","newData","dialogs","map","list","dialogsPage","Dialogs"],"mappings":"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","file":"static/js/4.5f83502a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import React, {ComponentType} from \"react\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\ntype MapStatePropsType = {\n    isAuth: boolean | null\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent = (props: MapStatePropsType) => {\n        let {isAuth, ...restProps} = props\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>\n        return <Component {...restProps as T}/>\n    }\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n    return ConnectedRedirectComponent\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Dialogs_list__2o-TF\",\"item\":\"Dialogs_item__1Rw8z\",\"message\":\"Dialogs_message__1qS-S\"};","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class was deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` was deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import {NavLink} from \"react-router-dom\";\nimport s from \"../Dialogs.module.sass\";\nimport React from \"react\";\nimport {Avatar} from \"@material-ui/core\";\nimport {DialogsItemType} from \"../../../types/types\";\n\n\nexport const DialogsItem: React.FC<DialogsItemType> = ({id, avatar, name, lastMessage}) => {\n    return (\n        <NavLink className={s.link} to={\"/messages/\" + id}>\n            <li className={s.item}>\n                <Avatar alt=\"Remy Sharp\" src={avatar}/>\n                <div className={s.message}>\n                    <div className={s.user_name}>{name}</div>\n                    <div className={s.last_message}>{lastMessage}</div>\n                </div>\n            </li>\n        </NavLink>\n    )\n}\n\n\n\n","import React from \"react\";\nimport s from \"./Dialogs.module.sass\";\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {DialogsItemType} from \"../../types/types\";\n\ntype DialogsType = {\n    dialogs: Array<DialogsItemType>\n    isAuth: boolean | null\n}\n\nconst Dialogs: React.FC<DialogsType> = (props) => {\n\n    let newData = props.dialogs.map(d => <DialogsItem key={d.id} id={d.id} name={d.name} lastMessage={d.lastMessage}\n                                                      avatar={d.avatar}/>)\n\n    return (\n        <ul className={s.list}>\n            {newData}\n        </ul>\n    )\n}\n\nexport default withAuthRedirect(Dialogs);\n\n","import React from \"react\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {DialogsItemType} from \"../../types/types\";\n\ntype mapStateToPropsType = {\n    dialogs: Array<DialogsItemType>\n    isAuth: boolean | null\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default connect<mapStateToPropsType, null, {}, AppStateType>(mapStateToProps, null)(Dialogs)\n"],"sourceRoot":""}