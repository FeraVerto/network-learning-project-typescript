{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.sass","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","DialogsItem","className","s","link","id","item","Avatar","alt","src","avatar","message","user_name","name","last_message","lastMessage","newData","dialogs","map","d","list","DialogsContainer","dialogsPage","Dialogs"],"mappings":"2LASMA,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAoBC,GAQhC,OAFiCC,YAAQN,EAARM,EALP,SAACC,GACMA,EAAxBL,OADgD,IACrCM,EADoC,YACvBD,EADuB,YAEpD,OAAKA,EAAML,OACJ,cAACG,EAAD,eAAeG,IADI,cAAC,IAAD,CAAUC,GAAI,gB,oBCjBhDC,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,2B,6FCMzEC,EAAyC,SAACL,GACnD,OACI,cAAC,IAAD,CAASM,UAAWC,IAAEC,KAAMN,GAAI,aAAeF,EAAMS,GAArD,SACI,qBAAIH,UAAWC,IAAEG,KAAjB,UACI,cAACC,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAKb,EAAMc,SACpC,sBAAKR,UAAWC,IAAEQ,QAAlB,UACI,qBAAKT,UAAWC,IAAES,UAAlB,SAA8BhB,EAAMiB,OACpC,qBAAKX,UAAWC,IAAEW,aAAlB,SAAiClB,EAAMmB,uB,SCS5CtB,eAZwB,SAACG,GAEpC,IAAIoB,EAAUpB,EAAMqB,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAwBd,GAAIc,EAAEd,GAAIQ,KAAMM,EAAEN,KAAME,YAAaI,EAAEJ,YAClDL,OAAQS,EAAET,QADLS,EAAEd,OAGzD,OACI,oBAAIH,UAAWC,IAAEiB,KAAjB,SACKJ,O,QCDPK,EAAmB1B,aAPD,SAACL,GACrB,MAAO,CACH2B,QAAS3B,EAAMgC,YAAYL,QAC3B1B,OAAQD,EAAME,KAAKD,UAIoE,KAAtEI,CAA4E4B,GACrFF","file":"static/js/4.b4d4d68c.chunk.js","sourcesContent":["import React, {ComponentType} from \"react\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\ntype MapStatePropsType = {\n    isAuth: boolean | null\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent = (props: MapStatePropsType) => {\n        let {isAuth, ...restProps} = props\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>\n        return <Component {...restProps as T}/>\n    }\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n    return ConnectedRedirectComponent\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Dialogs_list__2o-TF\",\"item\":\"Dialogs_item__1Rw8z\",\"message\":\"Dialogs_message__1qS-S\"};","import {NavLink} from \"react-router-dom\";\nimport s from \"../Dialogs.module.sass\";\nimport React from \"react\";\nimport {Avatar} from \"@material-ui/core\";\nimport {DialogsItemType} from \"../../../redux/redux-store\";\n\n\nexport const DialogsItem: React.FC<DialogsItemType> = (props) => {\n    return (\n        <NavLink className={s.link} to={\"/messages/\" + props.id}>\n            <li className={s.item}>\n                <Avatar alt=\"Remy Sharp\" src={props.avatar} />\n                <div className={s.message}>\n                    <div className={s.user_name}>{props.name}</div>\n                    <div className={s.last_message}>{props.lastMessage}</div>\n                </div>\n            </li>\n        </NavLink>\n    )\n}\n\n\n\n","import React from \"react\";\nimport s from \"./Dialogs.module.sass\";\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\nimport {DialogsItemType} from \"../../redux/redux-store\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\ntype DialogsType = {\n    dialogs: Array<DialogsItemType>\n    isAuth: boolean | null\n}\n\nconst Dialogs: React.FC<DialogsType> = (props) => {\n\n    let newData = props.dialogs.map(d => <DialogsItem key={d.id} id={d.id} name={d.name} lastMessage={d.lastMessage}\n                                                      avatar={d.avatar}/>)\n\n    return (\n        <ul className={s.list}>\n            {newData}\n        </ul>\n    )\n}\n\nexport default withAuthRedirect(Dialogs);\n\n","import React from \"react\";\nimport {AppStateType, DialogsItemType} from \"../../redux/redux-store\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\n\ntype mapStateToPropsType = {\n    dialogs: Array<DialogsItemType>\n    isAuth: boolean | null\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        isAuth: state.auth.isAuth\n    }\n}\n\nconst DialogsContainer = connect<mapStateToPropsType, null, {}, AppStateType>(mapStateToProps, null)(Dialogs)\n export default DialogsContainer"],"sourceRoot":""}